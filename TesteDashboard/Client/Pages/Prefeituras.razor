@page "/Prefeituras"
@inject HttpClient http
@using TesteDashboard.Shared

@if (prefeituras == null)
{
    <h3>Aguarde até carregar todos os dados, mentira esse dashboard ainda está sendo desenvolvido então provavelmente é um erro :)</h3>
    <RadzenProgressBar Value="100" ShowValue="false" Mode="ProgressBarMode.Indeterminate" Style="margin-bottom: 20px" />
}
else
{
    <div class="row" style="justify-content: space-between; border: 15px solid transparent; border-radius: 20px;">
        <div class="col-md-4 col-xl-3">
            <div class="card bg-c-green order-card">
                <div class="card-block">
                    <h6 class="m-b-20">Prefeituras Atualizadas</h6>
                    <h2 class="text-right"><i class="oi oi-circle-check f-left"></i><span>@atualizados.valores.ToString()</span></h2>
                </div>
            </div>
        </div>
        <div class="col-md-4 col-xl-3">
            <div class="card bg-c-blue order-card">
                <div class="card-block">
                    <h6 class="m-b-20">Prefeituras Atualizadas nas Últimas 24hrs</h6>
                    <h2 class="text-right"><i class="oi oi-timer f-left"></i><span>@atualizados24hrs.valores.ToString()</span></h2>
                </div>
            </div>
        </div>
        <div class="col-md-4 col-xl-3">
            <div class="card bg-c-yellow order-card">
                <div class="card-block">
                    <h6 class="m-b-20">Prefeituras Desatualizadas</h6>
                    <h2 class="text-right"><i class="oi oi-warning f-left"></i><span>@desatualizados.valores.ToString()</span></h2>
                </div>
            </div>
        </div>
        <div class="col-md-4 col-xl-3">
            <div class="card bg-c-pink order-card">
                <div class="card-block">
                    <h6 class="m-b-20">Prefeituras Desatualizadas Por Mais de Uma Semana</h6>
                    <h2 class="text-right"><i class="oi oi-circle-x f-left"></i><span>@desatualizadosMaisDeUmaSemana.valores.ToString()</span></h2>
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-md-6 box">
            <h1>GRÁFICO 01</h1>
            <RadzenChart>
                <RadzenColumnSeries Data="@prefeiturasAtualizadas" Title="Prefeituras Atualizadas Hoje" LineType="LineType.Dashed" ValueProperty="valores" />
                <RadzenColumnSeries Data="@prefeiturasAtualizadas24hrs" Title="Prefeituras Atualizadas nas Últimas 24hrs" ValueProperty="valores" />
                <RadzenColumnSeries Data="@prefeiturasDesatualizadas" Title="Prefeituras Desatualizadas" ValueProperty="valores" />
                <RadzenColumnSeries Data="@prefeiturasDesatualizadasMaisDeUmaSemana" Title="Prefeituras Desatualizadas a Mais De 1 Semana" ValueProperty="valores" />
                <RadzenColumnOptions Radius="5" />
                <RadzenValueAxis>
                    <RadzenGridLines Visible="true" />
                    <RadzenAxisTitle Text="Prefeituras" />
                </RadzenValueAxis>
            </RadzenChart>
        </div>
        <div class="col-md-6 box">
            <h1>GRÁFICO 02</h1>
            <RadzenChart>
                <RadzenDonutSeries Data="@dadosGraficoCircular" CategoryProperty="texto" Title="Quantidade de Prefeituras" ValueProperty="valores">
                    <TitleTemplate>
                        <div class="rz-donut-content">
                            <div>Prefeituras</div>
                            <div>Desatualizadas</div>
                        </div>
                    </TitleTemplate>
                </RadzenDonutSeries>
            </RadzenChart>
        </div>
    </div>

    <div class="row">
        <div class="col-md-12 box">
            <h1>GRÁFICO 03</h1>
            @*<RadzenChart>
                <RadzenLineSeries Data="@dadosGraficoTeste" CategoryProperty="Date" LineType="LineType.Dashed" ValueProperty="Revenue">
                    <RadzenMarkers MarkerType="MarkerType.Square" />
                </RadzenLineSeries>
                <RadzenLineSeries Data="@dadosGraficoTeste" CategoryProperty="Date" ValueProperty="Revenue">
                    <RadzenMarkers MarkerType="MarkerType.Circle" />
                </RadzenLineSeries>
                <RadzenCategoryAxis Padding="20" FormatString="{0:MMM}" />
                <RadzenValueAxis>
                    <RadzenGridLines Visible="true" />
                    <RadzenAxisTitle Text="Revenue in USD" />
                </RadzenValueAxis>
            </RadzenChart>*@
        </div>
    </div>

    <div class="row ">
        <div class="col-md-12 box">
            <h1>TABELA</h1>
            <RadzenDataGrid Data=@filtro FilterMode="FilterMode.Simple" AllowFiltering="true" AllowPaging="true" AllowSorting="true" TItem="Prefeitura" Style="margin-bottom: 50px; margin-top: 50px; background-color:red;">
                <Columns>
                    <RadzenDataGridColumn TItem="Prefeitura" Property="id" Title="ID">
                    </RadzenDataGridColumn>
                    <RadzenDataGridColumn TItem="Prefeitura" Property="nomePrefeitura" Title="Nome da Prefeitura" />
                    <RadzenDataGridColumn TItem="Prefeitura" Property="ultimaAtualizacao" Title="Última Atualização">
                    </RadzenDataGridColumn>
                    <RadzenDataGridColumn TItem="Prefeitura" Property="situacao" Title="Situação da Prefeitura" />
                </Columns>
            </RadzenDataGrid>
        </div>
    </div>
}

@code {

    GraficoBarra atualizados = new GraficoBarra();
    GraficoBarra atualizados24hrs = new GraficoBarra();
    GraficoBarra desatualizados = new GraficoBarra();
    GraficoBarra desatualizadosMaisDeUmaSemana = new GraficoBarra();

    List<Prefeitura> prefeituras { get; set; }
    List<GraficoBarra> prefeiturasAtualizadas { get; set; }
    List<GraficoBarra> prefeiturasAtualizadas24hrs { get; set; }
    List<GraficoBarra> prefeiturasDesatualizadas { get; set; }
    List<GraficoBarra> prefeiturasDesatualizadasMaisDeUmaSemana { get; set; }
    List<GraficoCircular> dadosGraficoCircular { get; set; }

    ISituacaoPrefeitura situacao;
    IEnumerable<Prefeitura> filtro;

    protected override async Task OnInitializedAsync()
    {
        var url = "http://localhost:3000/prefeitura";
        prefeituras = await http.GetFromJsonAsync<List<Prefeitura>>(url);
        inserirDadosCards(prefeituras);

        var url2 = "http://localhost:3000/prefeiturasAtualizadas";
        prefeiturasAtualizadas = await http.GetFromJsonAsync<List<GraficoBarra>>(url2);

        var url3 = "http://localhost:3000/prefeiturasAtualizadas24hrs";
        prefeiturasAtualizadas24hrs = await http.GetFromJsonAsync<List<GraficoBarra>>(url3);

        var url4 = "http://localhost:3000/prefeiturasDesatualizadas";
        prefeiturasDesatualizadas = await http.GetFromJsonAsync<List<GraficoBarra>>(url4);

        var url5 = "http://localhost:3000/prefeiturasDesatualizadasMaisDeUmaSemana";
        prefeiturasDesatualizadasMaisDeUmaSemana = await http.GetFromJsonAsync<List<GraficoBarra>>(url5);

        var url6 = "http://localhost:3000/dadosGraficoBarra";
        dadosGraficoCircular = await http.GetFromJsonAsync<List<GraficoCircular>>(url6);

        var url7 = "http://localhost:3000/dadosGraficoTeste";
        //dadosGraficoTeste = await http.GetFromJsonAsync<List<GraifcoTeste>>(url6);

        filtro = prefeituras;
    }

    public void inserirDadosCards(List<Prefeitura> prefeituras)
    {
        double prefeiturasAtualizadas = 0,
            prefeiturasAtualizadasUltimas24hrs = 0,
            prefeiturasDesatualizadas = 0,
            prefeiturasDesatualizadasMaisDeUmaSemana = 0;

        foreach (var item in prefeituras)
        {
            item.ultimaAtualizacao = DateTime.Parse(item.ultimaAtualizacao).ToString("dd/MM/yyyy HH:mm:ss");

            switch (item.situacao)
            {
                case "1":
                    prefeiturasAtualizadas++;
                    item.situacao = "Atualizada";
                    break;
                case "2":
                    prefeiturasAtualizadasUltimas24hrs++;
                    item.situacao = "Atualizada nas últimas 24 horas";
                    break;
                case "3":
                    prefeiturasDesatualizadas++;
                    item.situacao = "Desatualizada";
                    break;
                case "4":
                    prefeiturasDesatualizadasMaisDeUmaSemana++;
                    item.situacao = "Desatualizada a mais de uma semana";
                    break;
            }
        }

        atualizados.valores = prefeiturasAtualizadas;
        atualizados24hrs.valores = prefeiturasAtualizadasUltimas24hrs;
        desatualizados.valores = prefeiturasDesatualizadas;
        desatualizadosMaisDeUmaSemana.valores = prefeiturasDesatualizadasMaisDeUmaSemana;
    }
}

@*http://www.macoratti.net/20/07/blz_awebapi1.htm tutorial utilizado para consumir api*@
@*https://www.bootdey.com/snippets/view/Gradients-dashboard-cards#css componente do card*@
@*https://blazor.radzen.com/dashboard outros componentes*@
@*https://useiconic.com/open icones utilizados*@